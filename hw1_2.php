

Задание 3.
Дан код
Что он выведет на каждом шаге? Почему?


	class A {
	    public function foo() {
	        static $x = 0;
	        echo ++$x;
	    }
	}
	$a1 = new A();
	$a2 = new A();
	$a1->foo();
	$a2->foo();
	$a1->foo();
	$a2->foo();




РЕШЕНИЕ:

Будут последовательно выведены числа 1, 2, 3 и 4 - это результат инкремента ++$x.
Мое объяснение:
- Переменная $x при завершении работы метода foo() не удаляется, а сохраняет свое предыдущее значение. И при новом вызове метода foo(), она не инициализируется заново, а берет сохраненное значение. Это происходит потому, что $x объявлена как статическая.
По крайней мере так я понял из докментации. Цитата:
"Статическая переменная существует только в локальной области видимости функции, но не теряет своего значения, когда выполнение программы выходит из этой области видимости."

- Но это лишь половина ситуации... Вторая половина заключается в том, что создается не один, а два экземпляра класса A. Но при вызове метода foo() из разных экземпляров, значение переменной сохраняется. Как будто, не у каждого экземпляра свой метод foo(), а он один и тот же...
Объяснение такого поведения в документации я не нашел. Но об этом есть упоминание в статье на Хабре: https://habr.com/ru/post/259627/
Там это описывается как один из "подводных камней" при использовании статических переменных.

****************************************
****************************************

Задание 3-4

РЕШЕНИЕ
Кстати, и следующий код, тоже объясняется в той же статье:
"наследование класса (и метода) приводит к тому, что всё-таки создается новый метод"

Поэтому результатом выполнения следующего кода будет: 1122

	class A {
	    public function foo() {
	        static $x = 0;
	        echo ++$x;
	    }
	}
	class B extends A {
	}
	$a1 = new A();
	$b1 = new B();
	$a1->foo(); 
	$b1->foo(); 
	$a1->foo(); 
	$b1->foo();








